---
import { Image } from "astro:assets";
import type { PostType } from "../../types";
import getImageUrl from "../utils/getImageUrl";
import type { ImageMetadata } from "astro";

interface Props {
  post: PostType;
}

const { post } = Astro.props;

// Import thumbnail image metadata
let thumbnailPath: ImageMetadata | null;
if (post.data.image && !post.data.imageUrl) {
  throw new Error(`Image not found for post ${post.data.title}`);
} else {
  thumbnailPath = post.data.image ? await getImageUrl(post.data.image) : null;
}
---

<div
  class="relative max-md:-mx-4"
  style={`
    --item-color: ${post.data.color ?? (post.data.image ? "var(--color-secondary)" : "var(--color-primary)")}; 
    `}
>
  <!-- Gradient -->
  <div
    class={`${post.data.image ? "absolute inset-0 to-50%" : "w-full aspect-video to-95% "} bg-gradient-to-t from-primary to-(--item-color)`}
  >
  </div>

  <!-- Overlay -->
  <div
    class="absolute bottom-0 left-0 [&_*]:text-secondary z-10 flex w-full flex-col"
  >
    <h1 class={`!my-0 text-xl/[1.125] md:!text-2xl/tight px-3 py-2`}>
      {post.data.title}
    </h1>
    <p
      class="!my-0 font-medium text-base md:text-lg border-t border-secondary px-3 py-1"
    >
      {
        post.data.published.toLocaleDateString("fr-FR", {
          year: "numeric",
          month: "2-digit",
          day: "2-digit"
        })
      }
      {
        post.data.tags && (
          <span class="[&_a]:no-underline">
            {" | "}{" "}
            {post.data.tags
              .map((t) => {
                const n = post.collection === "notes" ? "/notes" : "";
                const h = `${n}/tags/${t}`;
                return <a href={h}>{t}</a>;
              })
              .reduce((prev, curr) => [prev, ", ", curr])}
          </span>
        )
      }
    </p>
  </div>

  <!-- Image -->
  {
    thumbnailPath && (
      <Image
        src={thumbnailPath}
        alt={post.data.title}
        class="w-full aspect-video object-cover mix-blend-multiply grayscale-100 !my-0"
      />
    )
  }
</div>
